{% set name = "xmip" %}
{% set version = "0.7.0" %}
{% set sha = 98e6741384838b144cd5b9144df66c07d01efcb4a83bdf0477071863bd027042 %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha }}

build:
  noarch: python
  number: 0
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - python >=3.7
    - pip
    - pytest-runner
    - setuptools_scm
  run:
    - python >=3.7
    - xarray
    - pandas
    - numpy
    - pint-xarray
    - importlib-metadata  # Only need for Python < 3.8 (but doesn't hurt on other versions) I think so could be removed in future

test:
  imports:
    - xmip
    
  commands: python -c "import xmip; assert xmip.__version__ == '{{ version }}', xmip.__version__"

about:
  home: https://github.com/jbusecke/xMIP
  license: MIT
  license_family: MIT
  license_file: LICENSE.txt
  summary: Some code to homogenize naming and parse variables in an xgcm compatible xarray dataset

  description: |
    Frustrated with how 'dirty' CMIP6 data still is? Do you just want to run a
    simple (or complicated) analysis on various models and end up having to
    write logic for each seperate case? Then this package is for you.

    Developed during the cmip6-hackathon this package provides utility
    functions that play nicely with intake-esm.
  dev_url: https://github.com/jbusecke/cmip6_preprocessing

extra:
  recipe-maintainers:
    - jbusecke
